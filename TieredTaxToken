// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract TieredTaxToken {
    string public name = "TieredTaxToken";
    string public symbol = "TTX";
    uint8 public decimals = 18;
    uint256 public totalSupply = 1_000_000 * 1e18;

    mapping(address => uint256) public balanceOf;

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor() { balanceOf[msg.sender] = totalSupply; }

    function transfer(address to, uint256 amount) public returns (bool) {
        require(balanceOf[msg.sender] >= amount, "Insufficient");
        uint256 tax;
        if (amount < 1000 * 1e18) tax = 0;
        else if (amount < 10000 * 1e18) tax = amount / 50; // 2%
        else tax = amount / 20; // 5%
        uint256 sendAmount = amount - tax;
        balanceOf[msg.sender] -= amount;
        balanceOf[to] += sendAmount;
        balanceOf[address(this)] += tax;
        emit Transfer(msg.sender, to, sendAmount);
        if (tax > 0) emit Transfer(msg.sender, address(this), tax);
        return true;
    }
}
